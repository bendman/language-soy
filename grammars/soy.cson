'scopeName': 'source.soy'
'name': 'Soy Template'
'fileTypes': [
  'soy'
]
'patterns': [
  {
    'begin': '/\\*'
    'name': 'comment.block.js'
    'patterns': [
      {
        'match': '(@param)\\s+(\\w+)'
        'captures': {
          '1': 'name': 'storage.modifier.js'
          '2': 'name': 'variable.parameter.function.js'
        }
      }
    ]
    'end': '\\*/'
  }
  {
    'begin': '//'
    'name': 'comment.line.double-slash.js'
    'end': '\\n'
  }
  {
    'include': '#namespace'
  }
  {
    'include': '#template'
  }
  {
    'include': '#text.html.basic'
  }
]
'repository': {
  'procedures': {
    'patterns': [
      {
        'match': '\\$[\\w\\.]+'
        'name': 'variable.other.js'
      }
      {
        'match': '(==|!=|\\+|-|in)'
        'name': 'keyword.operator.js'
      }
      {
        'match': '\\W(true|false|null|\\d+)'
        'captures': '1': 'name': 'constant.language.js'
      }
      {
        'match': '\\s(\\|(?:insertWordBreaks|noAutoescape|escapeHtml))'
        'name': 'keyword.operator.js'
      }
    ]
  }
  'commands': {
    'patterns': [
      {
        'match': '{(sp|nil|lb|rb|(?:\\\\)(r|n|t))}'
        'captures': '1': 'name': 'constant.language.js'
      }
      {
        'begin': '{(else(if)?|/?switch|case|default|ifempty|/?foreach|print|/?if|/?for)'
        'captures': '1': 'name': 'keyword.control.js'
        'patterns': [
          {
            'include': '#procedures'
          }
        ]
        'end': '}'
      }
      {
        'begin': '{(literal)}'
        'beginCaptures': '1': 'name': 'keyword.control.js'
        'patterns': [
          {
            'include': 'text.html.basic'
          }
        ]
        'end': '{/(literal)}'
        'endCaptures': '1': 'name': 'keyword.control.js'
      }
    ]
  }
  'namespace': {
    'patterns': [
      {
        'begin': '\{(namespace|delpackage)\\s+([\\w\\.]+)'
        'beginCaptures': {
          '1': 'name': 'storage.type.function'
          '2': 'name': 'entity.name.section.js'
        }
        'end': '\}'
        'patterns': [
          {
            'include': '#attributes'
          }
        ]
      }
    ]
  }
  'templateName': {
    'patterns': [
      {
        'match': '(\\.[\\.\\w]+)'
        'captures': {
          '1': 'name': 'entity.name.section.js'
        }
        'name': 'template.name.soy'
      }
    ]
  }
  'template': {
    'patterns': [
      {
        'begin': '\{(template|deltemplate)\\b'
        'beginCaptures': {
          '1': 'name': 'storage.type.function'
        }
        'name': 'template.tag.soy'
        'end': '\/(template|deltemplate)\}'
        'endCaptures': {
          '1': 'name': 'storage.type.function'
        }
        'patterns': [
          {
            'include': '#templateName'
          }
          {
            'include': '#attributes'
          }
          {
            'begin': '(?!<\/(template|deltemplate))(\})'
            'end': '(\{)(?=\/(?:template|deltemplate))'
            'patterns': [
              {
                'include': '#templateContent'
              }
            ]
          }
        ]
      }
    ]
  }
  'templateContent': {
    'patterns': [
      {
        'include': 'text.html.basic'
      }
      {
        'include': '#commands'
      }
      {
        'include': '#procedures'
      }
      {
        'include': '#call'
      }
      {
        'include': '#msg'
      }
    ]
  }
  'msg': {
    'patterns': [
      {
        'begin': '\{(msg)\\b'
        'beginCaptures': {
          '1': 'name': 'entity.name.tag'
        }
        'name': 'msg.tag.soy'
        'end': '\/(msg)\}'
        'endCaptures': {
          '1': 'name': 'entity.name.tag'
        }
        'patterns': [
          {
            'include': '#attributes'
          }
          {
            'begin': '(?!<\/msg)\}'
            'end': '\{(?=\/msg)'
            'patterns': [
              {
                'include': '#templateContent'
              }
              {
                'include': '#fallbackMsg'
              }
            ]
          }
        ]
      }
    ]
  }
  'fallbackMsg': {
    'patterns': [
      {
        'begin': '\{(fallbackmsg)\\b'
        'beginCaptures': {
          '1': 'name': 'entity.name.tag'
        }
        'name': 'fallbackmsg.tag.soy'
        'end': '\}'
        'patterns': [
          {
            'include': '#attributes'
          }
        ]
      }
    ]
  }
  'call': {
    'patterns': [
      {
        'begin': '{/?(call)'
        'captures': '1': 'name': 'keyword.control.js'
        'end': '/?}'
        'patterns': [
          {
            'include': '#templateName'
          }
          {
            'include': '#attributes'
          }
        ]
      }
    ]
  }
  'attributes': {
    'patterns': [
      {
        'include': '#attributeSingleQuote'
      }
      {
        'include': '#attributeDoubleQuote'
      }
    ]
  }
  'attributeSingleQuote': {
    'patterns': [
      {
        'match': '([a-zA-Z0-9:-]+)\\s*(=)\\s*(\'[^\']*\')'
        'captures': {
          '1': 'name': 'entity.other.attribute-name.soy'
          '2': 'name': 'keyword.operator.soy'
          '3': 'name': 'string.quoted.single.soy'
        }
        'name': 'template.attribute.soy'
      }
    ]
  }
  'attributeDoubleQuote': {
    'patterns': [
      {
        'match': '([a-zA-Z0-9:-]+)\\s*(=)\\s*(\"[^\"]*\")'
        'captures': {
          '1': 'name': 'entity.other.attribute-name.soy'
          '2': 'name': 'keyword.operator.soy'
          '3': 'name': 'string.quoted.single.soy'
        }
        'name': 'template.attribute.soy'
      }
    ]
  }
}
